<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:Configurator.Views.Controls"
                    xmlns:converter="clr-namespace:Core.Converter;assembly=Core"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textbox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textblock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.combobox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.radiobutton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.checkbox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.datagrid.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.scrollviewer.xaml" />

    </ResourceDictionary.MergedDictionaries>

    <!-- CONVERTERS -->
    <converter:SwitchConverter x:Key="PingColorConverter"
                               Default="Black">
        <converter:Case When="True"
                        Then="DarkGreen"/>
        <converter:Case When="False"
                        Then="DarkRed"/>
    </converter:SwitchConverter>

    <!-- CUSTOM STYLES -->

    <Style x:Key="NoBarsStyle"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{StaticResource MaterialDesignScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
    </Style>

    <Style x:Key="TextBlockStyle"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
    </Style>

    <Style x:Key="PingBtnStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(materialDesign:ShadowAssist.CacheMode)}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}" CornerRadius="2"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"                                    
                                        x:Name="border"
                                        Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:ShadowAssist.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}" />
                            </Grid>
                        </AdornerDecorator>
                        <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}"
                                               Focusable="False"     
                                               ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Padding="{TemplateBinding Padding}" 
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            <Viewbox>
                                <materialDesign:PackIcon Kind="Wifi"/>
                            </Viewbox>
                        </materialDesign:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="materialDesign:ShadowAssist.Darken" Value="True" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="ToolTip" Value="Проверить соединение"/>
        <Setter Property="MinWidth" Value="56"/>
    </Style>

    <Style x:Key="ToolBarBtnStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style x:Key="UriControlStyle"
           TargetType="{x:Type controls:BaseUriView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BaseUriView}">
                    <DockPanel>
                        <Button DockPanel.Dock="Right"
                                Style="{StaticResource PingBtnStyle}"
                                Name="PingButton"
                                Foreground="{TemplateBinding IsCheckedPath, Converter={StaticResource PingColorConverter}}"/>

                        <TextBox Name="UriBox"
                                 Text="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                                        Path=Path,
                                        Mode=TwoWay,                            
                                        UpdateSourceTrigger=PropertyChanged}"
                                 materialDesign:HintAssist.Hint="{TemplateBinding UriHint}"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- DEFAULTS -->

    <Style TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource MaterialDesignComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type RadioButton}"
           BasedOn="{StaticResource MaterialDesignRadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource MaterialDesignCheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
    </Style>

    <Style TargetType="{x:Type DataGrid}"
           BasedOn="{StaticResource MaterialDesignDataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>

        <Setter Property="RowStyle" Value="{StaticResource MaterialDesignDataGridRow}"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource MaterialDesignDataGridColumnHeader}"/>
        <Setter Property="CellStyle" Value="{StaticResource MaterialDesignDataGridCell}"/>
        <Setter Property="RowHeaderStyle" Value="{StaticResource MaterialDesignDataGridRowHeader}"/>
    </Style>

    <Style TargetType="{x:Type controls:MineServerPinger}"
           BasedOn="{StaticResource UriControlStyle}"/>

    <Style TargetType="{x:Type controls:UriPathView}"
           BasedOn="{StaticResource UriControlStyle}"/>
</ResourceDictionary>