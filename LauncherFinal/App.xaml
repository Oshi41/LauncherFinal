<Application x:Class="LauncherFinal.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LauncherFinal"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:popupViewModels="clr-namespace:LauncherFinal.ViewModels.PopupViewModels"
             xmlns:converters="clr-namespace:LauncherFinal.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Grey.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Amber.xaml" />


                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.dialoghost.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textbox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.textblock.xaml" />


                <ResourceDictionary Source="/LauncherFinal;component/Views/DataTemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:MathConverter x:Key="MaxWidthConverter"
                                      Divide="2"/>

            <converters:MathConverter x:Key="GoldenConverter"
                                      Divide="1.25"/>

            <Style x:Key="DialogStyle"
                   TargetType="materialDesign:DialogHost"
                   BasedOn="{StaticResource {x:Type materialDesign:DialogHost}}">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <!-- IPopup -->
                <Setter Property="CloseOnClickAway"
                        Value="{Binding RelativeSource={RelativeSource Self},
                    Path=DialogContent.CanClickAway,
                    FallbackValue=true}">
                </Setter>
                
                <Setter Property="DialogContentTemplate">
                    <Setter.Value>
                        <DataTemplate DataType="materialDesign:DialogHost">
                            <ContentControl Content="{Binding}"
                                            MinWidth="180"
                                            MaxHeight="{Binding RelativeSource={RelativeSource Self},
                                Path=ActualWidth, Converter={StaticResource GoldenConverter}}"
                                            Width="{Binding RelativeSource={RelativeSource AncestorType=Window}, 
                                Path=ActualWidth, Converter={StaticResource MaxWidthConverter}}"
                                            Height="{Binding RelativeSource={RelativeSource AncestorType=Window}, 
                                Path=ActualHeight, Converter={StaticResource MaxWidthConverter}}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HostContent"
                   TargetType="ContentControl">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentControl">
                            <!-- Для ошибок, макс приоритет -->
                            <materialDesign:DialogHost Style="{StaticResource DialogStyle}"
                                                       Identifier="{x:Static popupViewModels:DialogHostNames.MessagesDialogName}">

                                <!-- Для отображения работ -->
                                <materialDesign:DialogHost Style="{StaticResource DialogStyle}"
                                                           Identifier="{x:Static popupViewModels:DialogHostNames.WorkerDialogName}">

                                    <!-- Контент -->
                                    <ContentControl Content="{TemplateBinding Content}"/>
                                </materialDesign:DialogHost>
                            </materialDesign:DialogHost>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="TextBlock"
                   BasedOn="{StaticResource MaterialDesignBody1TextBlock}"/>

        </ResourceDictionary>
    </Application.Resources>
</Application>
